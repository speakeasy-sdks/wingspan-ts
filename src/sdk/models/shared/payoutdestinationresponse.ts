/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum DestinationTypePayoutDestinationResponse {
    Account = "Account",
    Card = "Card",
    WeGift = "WeGift",
}

export enum PayoutMethodPayoutDestinationResponse {
    Standard = "Standard",
    Instant = "Instant",
    Expedited = "Expedited",
    Check = "Check",
    ECheck = "ECheck",
}

export class PayoutDestinationResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "destinationId" })
    destinationId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "destinationType" })
    destinationType: DestinationTypePayoutDestinationResponse;

    @SpeakeasyMetadata()
    @Expose({ name: "last4" })
    last4?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payoutMethod" })
    payoutMethod: PayoutMethodPayoutDestinationResponse;

    @SpeakeasyMetadata()
    @Expose({ name: "percentage" })
    percentage: number;
}
