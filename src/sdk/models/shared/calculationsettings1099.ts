/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum CardProcessingFeesCalculationSettings1099 {
    Include = "Include",
    Exclude = "Exclude",
}

export enum OffPlatformPaymentsCalculationSettings1099 {
    Include = "Include",
    Exclude = "Exclude",
}

export enum ReimbursableExpensesCalculationSettings1099 {
    Include = "Include",
    Exclude = "Exclude",
}

export class CalculationSettings1099 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "cardProcessingFees" })
    cardProcessingFees?: CardProcessingFeesCalculationSettings1099;

    @SpeakeasyMetadata()
    @Expose({ name: "offPlatformPayments" })
    offPlatformPayments?: OffPlatformPaymentsCalculationSettings1099;

    @SpeakeasyMetadata()
    @Expose({ name: "reimbursableExpenses" })
    reimbursableExpenses?: ReimbursableExpensesCalculationSettings1099;

    @SpeakeasyMetadata()
    @Expose({ name: "stateTaxId" })
    stateTaxId?: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "thresholdAmount" })
    thresholdAmount?: number;
}
