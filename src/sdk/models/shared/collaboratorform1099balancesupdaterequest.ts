/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum DeliveryMethodCollaboratorForm1099BalancesUpdateRequest {
    Electronic = "Electronic",
    Mail = "Mail",
    Both = "Both",
    LessThanNilGreaterThan = "<nil>",
}

export class CollaboratorForm1099BalancesUpdateRequestEvents2 extends SpeakeasyBase {}

export enum StatusCollaboratorForm1099BalancesUpdateRequest {
    Ready = "Ready",
    NeedsActionInfo = "NeedsActionInfo",
    NeedsActionDispute = "NeedsActionDispute",
    Submitted = "Submitted",
    Rejected = "Rejected",
    Accepted = "Accepted",
    Excluded = "Excluded",
    LessThanNilGreaterThan = "<nil>",
}

export class CollaboratorForm1099BalancesUpdateRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "adjustments" })
    adjustments?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "correction" })
    correction?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "deliveryMethod" })
    deliveryMethod?: DeliveryMethodCollaboratorForm1099BalancesUpdateRequest;

    @SpeakeasyMetadata()
    @Expose({ name: "dispute" })
    dispute?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "events" })
    events?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: StatusCollaboratorForm1099BalancesUpdateRequest;
}
