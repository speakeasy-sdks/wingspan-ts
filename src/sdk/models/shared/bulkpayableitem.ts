/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserRoles } from "./userroles";
import { Expose, Type } from "class-transformer";

export enum PayableStatusBulkPayableItem {
    Draft = "Draft",
    Open = "Open",
    Approved = "Approved",
    Paid = "Paid",
    Cancelled = "Cancelled",
}

export enum StatusBulkPayableItem {
    Open = "Open",
    Pending = "Pending",
    Processing = "Processing",
    Complete = "Complete",
    Failed = "Failed",
}

export enum BulkPayableItemWorkflowSubStatus {
    Submitted = "Submitted",
    LessThanNilGreaterThan = "<nil>",
}

/**
 * An item that will be converted into a payable
 */
export class BulkPayableItem extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "attachmentId" })
    attachmentId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bulkPayableBatchId" })
    bulkPayableBatchId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bulkPayableItemId" })
    bulkPayableItemId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bulkPayableItemMergeKey" })
    bulkPayableItemMergeKey?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bulkPayableItemReference" })
    bulkPayableItemReference?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "collaboratorEmail" })
    collaboratorEmail?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "collaboratorExternalId" })
    collaboratorExternalId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "collaboratorId" })
    collaboratorId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "dueDate" })
    dueDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "integration" })
    integration?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "lineItemDescription" })
    lineItemDescription: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lineItemDetail" })
    lineItemDetail?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    metadata?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "paidDate" })
    paidDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payableNotes" })
    payableNotes?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payableStatus" })
    payableStatus: PayableStatusBulkPayableItem;

    @SpeakeasyMetadata()
    @Expose({ name: "reimbursableExpense" })
    reimbursableExpense?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: StatusBulkPayableItem;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userRoles" })
    @Type(() => UserRoles)
    userRoles: UserRoles;

    @SpeakeasyMetadata()
    @Expose({ name: "workflowSubStatus" })
    workflowSubStatus?: BulkPayableItemWorkflowSubStatus;
}
